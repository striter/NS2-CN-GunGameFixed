<shader>
	
	<inputs>
		<input name="emissiveMap" type="texture" address="wrap">materials/dev/black.dds</input> 
	</inputs>
	
	<code>
	<![CDATA[
    
        //CBS
        //Parallax scrolling fractal galaxy.
        //Inspired by JoshP's Simplicity shader: https://www.shadertoy.com/view/lslGWr

        float2 distance( float2 x, float2 y )
        {
            return abs(length(x-y));
        }

        float3 DecodeNormal(const float4 texNormal)
		{
			float4 n = texNormal * 2 - 1;
			//return float3(n.a, n.g, sqrt(1 - dot(n.ag, n.ag)) );
			return n.xyz;
		}
        
		void MaterialShader(in Material_Input input, inout Material material)
		{

            float2 screenCenter = float2(0.5, 0.5);

            float2 uv = input.texCoord.xy / screenCenter.xy;
            uv.y = -uv.y;
            float2 warp = normalize(screenCenter.xy - input.texCoord.xy) * pow(distance(screenCenter.xy, input.texCoord.xy), 2.0) * 30000000.0;
            warp.y = -warp.y;
            uv = uv + warp;
            
            float light = clamp(0.1*distance(screenCenter.xy, input.texCoord.xy) - 0.1, 0.0, 1.0);

            material.ssDistortion = input.color.rgb * tex2D(emissiveMap, uv) * light;
		}
	]]>
	</code>

</shader>